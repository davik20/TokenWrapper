{
  "contractName": "Wrapper",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tcgAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wtcgAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "wrap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "unwrap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tcgAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wtcgAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unwrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"wrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Wrapper.sol\":\"Wrapper\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/Wrapper.sol\":{\"keccak256\":\"0x398413ac78480d778a650cd545dd5ca3541d936b536bddb52cf499588eadf9c1\",\"urls\":[\"bzz-raw://ecf745ba17533483c220554efe7cd24ebfc289d41ebfd2a58e34589f5a73ae44\",\"dweb:/ipfs/QmQAFxi2JZh1g3SpthNiQMRhtf9G8JC8cYB9xD1SkTTaEU\"]},\"project:/contracts/interfaces/IERC20Mintable.sol\":{\"keccak256\":\"0x5dff62dfbae4013188a06d299b0ae289d739e0d02f5bb0f411ab2b8567785581\",\"urls\":[\"bzz-raw://aded20b12021f256547fbe1f8bc6eabbedeab59b4eb056d25972244e3bca1400\",\"dweb:/ipfs/QmXXT3dpV2TUMGyacUbSv63145h5ibmhjiWFYh5BZuzPSr\"]},\"project:/contracts/interfaces/IWrapper.sol\":{\"keccak256\":\"0x031dd0eb08813c4d11a0f104d2fe866bc04ff324c30c6de45ffc3ea63148bfca\",\"urls\":[\"bzz-raw://2b4d3e078e26262916209ce64a6dd4b53ae10aa64e60bd271fede6430c413105\",\"dweb:/ipfs/QmNZHWzjqopgSZTQbotfFiz19r3MS3w5JGXFM9xisMDM6B\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610d8c380380610d8c8339818101604052810190610032919061011d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061015d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ea826100bf565b9050919050565b6100fa816100df565b811461010557600080fd5b50565b600081519050610117816100f1565b92915050565b60008060408385031215610134576101336100ba565b5b600061014285828601610108565b925050602061015385828601610108565b9150509250929050565b610c208061016c6000396000f3fe608060405234801561001057600080fd5b5060043610610053576000357c010000000000000000000000000000000000000000000000000000000090048063de0e9a3e14610058578063ea598cb014610074575b600080fd5b610072600480360381019061006d9190610881565b610090565b005b61008e60048036038101906100899190610881565b6104e5565b005b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161010691906108ef565b602060405180830381865afa158015610123573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610147919061091f565b1015610188576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017f906109cf565b60405180910390fd5b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016102009291906109ef565b602060405180830381865afa15801561021d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610241919061091f565b1015610282576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027990610a64565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac33836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016102f9929190610a93565b600060405180830381600087803b15801561031357600080fd5b505af1158015610327573d6000803e3d6000fd5b5050505080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016103a391906108ef565b602060405180830381865afa1580156103c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e4919061091f565b1015610425576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041c90610b2e565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161049e929190610a93565b6020604051808303816000875af11580156104bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e19190610b86565b5050565b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161055d91906108ef565b602060405180830381865afa15801561057a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059e919061091f565b10156105df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d6906109cf565b60405180910390fd5b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016106599291906109ef565b602060405180830381865afa158015610676573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069a919061091f565b10156106db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d290610a64565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161075693929190610bb3565b6020604051808303816000875af1158015610775573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107999190610b86565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610811929190610a93565b600060405180830381600087803b15801561082b57600080fd5b505af115801561083f573d6000803e3d6000fd5b5050505050565b600080fd5b6000819050919050565b61085e8161084b565b811461086957600080fd5b50565b60008135905061087b81610855565b92915050565b60006020828403121561089757610896610846565b5b60006108a58482850161086c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108d9826108ae565b9050919050565b6108e9816108ce565b82525050565b600060208201905061090460008301846108e0565b92915050565b60008151905061091981610855565b92915050565b60006020828403121561093557610934610846565b5b60006109438482850161090a565b91505092915050565b600082825260208201905092915050565b7f4572726f723a20596f75722062616c616e6365206973206e6f7420656e6f756760008201527f6800000000000000000000000000000000000000000000000000000000000000602082015250565b60006109b960218361094c565b91506109c48261095d565b604082019050919050565b600060208201905081810360008301526109e8816109ac565b9050919050565b6000604082019050610a0460008301856108e0565b610a1160208301846108e0565b9392505050565b7f4572726f723a20416c6c6f77616e6365206e6f7420656e6f7567680000000000600082015250565b6000610a4e601b8361094c565b9150610a5982610a18565b602082019050919050565b60006020820190508181036000830152610a7d81610a41565b9050919050565b610a8d8161084b565b82525050565b6000604082019050610aa860008301856108e0565b610ab56020830184610a84565b9392505050565b7f4572726f723a20436f6e7472616374205443472042616c616e6365206973206e60008201527f6f7420656e6f7567680000000000000000000000000000000000000000000000602082015250565b6000610b1860298361094c565b9150610b2382610abc565b604082019050919050565b60006020820190508181036000830152610b4781610b0b565b9050919050565b60008115159050919050565b610b6381610b4e565b8114610b6e57600080fd5b50565b600081519050610b8081610b5a565b92915050565b600060208284031215610b9c57610b9b610846565b5b6000610baa84828501610b71565b91505092915050565b6000606082019050610bc860008301866108e0565b610bd560208301856108e0565b610be26040830184610a84565b94935050505056fea26469706673582212200c703fa1740319311659c0fc2c93ccaad1b38770b6a804ea71662af829e52f5c64736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610053576000357c010000000000000000000000000000000000000000000000000000000090048063de0e9a3e14610058578063ea598cb014610074575b600080fd5b610072600480360381019061006d9190610881565b610090565b005b61008e60048036038101906100899190610881565b6104e5565b005b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161010691906108ef565b602060405180830381865afa158015610123573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610147919061091f565b1015610188576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017f906109cf565b60405180910390fd5b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016102009291906109ef565b602060405180830381865afa15801561021d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610241919061091f565b1015610282576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027990610a64565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac33836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016102f9929190610a93565b600060405180830381600087803b15801561031357600080fd5b505af1158015610327573d6000803e3d6000fd5b5050505080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016103a391906108ef565b602060405180830381865afa1580156103c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e4919061091f565b1015610425576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041c90610b2e565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161049e929190610a93565b6020604051808303816000875af11580156104bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e19190610b86565b5050565b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161055d91906108ef565b602060405180830381865afa15801561057a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059e919061091f565b10156105df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d6906109cf565b60405180910390fd5b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016106599291906109ef565b602060405180830381865afa158015610676573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069a919061091f565b10156106db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d290610a64565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161075693929190610bb3565b6020604051808303816000875af1158015610775573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107999190610b86565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610811929190610a93565b600060405180830381600087803b15801561082b57600080fd5b505af115801561083f573d6000803e3d6000fd5b5050505050565b600080fd5b6000819050919050565b61085e8161084b565b811461086957600080fd5b50565b60008135905061087b81610855565b92915050565b60006020828403121561089757610896610846565b5b60006108a58482850161086c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108d9826108ae565b9050919050565b6108e9816108ce565b82525050565b600060208201905061090460008301846108e0565b92915050565b60008151905061091981610855565b92915050565b60006020828403121561093557610934610846565b5b60006109438482850161090a565b91505092915050565b600082825260208201905092915050565b7f4572726f723a20596f75722062616c616e6365206973206e6f7420656e6f756760008201527f6800000000000000000000000000000000000000000000000000000000000000602082015250565b60006109b960218361094c565b91506109c48261095d565b604082019050919050565b600060208201905081810360008301526109e8816109ac565b9050919050565b6000604082019050610a0460008301856108e0565b610a1160208301846108e0565b9392505050565b7f4572726f723a20416c6c6f77616e6365206e6f7420656e6f7567680000000000600082015250565b6000610a4e601b8361094c565b9150610a5982610a18565b602082019050919050565b60006020820190508181036000830152610a7d81610a41565b9050919050565b610a8d8161084b565b82525050565b6000604082019050610aa860008301856108e0565b610ab56020830184610a84565b9392505050565b7f4572726f723a20436f6e7472616374205443472042616c616e6365206973206e60008201527f6f7420656e6f7567680000000000000000000000000000000000000000000000602082015250565b6000610b1860298361094c565b9150610b2382610abc565b604082019050919050565b60006020820190508181036000830152610b4781610b0b565b9050919050565b60008115159050919050565b610b6381610b4e565b8114610b6e57600080fd5b50565b600081519050610b8081610b5a565b92915050565b600060208284031215610b9c57610b9b610846565b5b6000610baa84828501610b71565b91505092915050565b6000606082019050610bc860008301866108e0565b610bd560208301856108e0565b610be26040830184610a84565b94935050505056fea26469706673582212200c703fa1740319311659c0fc2c93ccaad1b38770b6a804ea71662af829e52f5c64736f6c634300080d0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1355:20",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:20",
                "type": ""
              }
            ],
            "src": "7:75:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:20",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:20"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:20",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:20"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:20",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:20"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:20"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:20",
                "type": ""
              }
            ],
            "src": "334:126:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:20"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:20"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:20",
                "type": ""
              }
            ],
            "src": "466:96:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:20"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:20"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:20"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:20",
                "type": ""
              }
            ],
            "src": "568:122:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "759:80:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "769:22:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "784:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "778:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "778:13:20"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "769:5:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "827:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "800:26:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "800:33:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "800:33:20"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "737:6:20",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "745:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "753:5:20",
                "type": ""
              }
            ],
            "src": "696:143:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "939:413:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "985:83:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "987:77:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "987:79:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "987:79:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "960:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "969:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "956:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "956:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "981:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "952:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "952:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "949:119:20"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1078:128:20",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1093:15:20",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1107:1:20",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1097:6:20",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1122:74:20",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1168:9:20"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1179:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1164:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1164:22:20"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1188:7:20"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1132:31:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1132:64:20"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1122:6:20"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1216:129:20",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1231:16:20",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1245:2:20",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1235:6:20",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1261:74:20",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1307:9:20"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1318:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1303:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1303:22:20"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1327:7:20"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1271:31:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1271:64:20"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1261:6:20"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "901:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "912:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "924:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "932:6:20",
                "type": ""
              }
            ],
            "src": "845:507:20"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 20,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7283:20",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:20",
                "type": ""
              }
            ],
            "src": "7:75:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:20",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:20"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:20",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:20"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:20",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:20"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:20"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:20",
                "type": ""
              }
            ],
            "src": "334:77:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:20"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:20"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:20"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:20",
                "type": ""
              }
            ],
            "src": "417:122:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:20"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:20"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:20",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:20",
                "type": ""
              }
            ],
            "src": "545:139:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "756:263:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "802:83:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "804:77:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:79:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "804:79:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "777:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "786:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "769:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "769:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "766:119:20"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "895:117:20",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "910:15:20",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "924:1:20",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "914:6:20",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "939:63:20",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "974:9:20"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "985:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "970:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "970:22:20"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "994:7:20"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "949:20:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:53:20"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "939:6:20"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "726:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "737:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "749:6:20",
                "type": ""
              }
            ],
            "src": "690:329:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1070:81:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1080:65:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1095:5:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1102:42:20",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1091:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1091:54:20"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1080:7:20"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1052:5:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1062:7:20",
                "type": ""
              }
            ],
            "src": "1025:126:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1202:51:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1212:35:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1241:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1223:17:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1223:24:20"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1212:7:20"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1184:5:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1194:7:20",
                "type": ""
              }
            ],
            "src": "1157:96:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1324:53:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1341:3:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1364:5:20"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1346:17:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1346:24:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1334:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1334:37:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1334:37:20"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1312:5:20",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1319:3:20",
                "type": ""
              }
            ],
            "src": "1259:118:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1481:124:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1491:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1503:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1514:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1499:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1499:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1491:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1571:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1584:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1595:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1580:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1580:17:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1527:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1527:71:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1527:71:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1453:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1465:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1476:4:20",
                "type": ""
              }
            ],
            "src": "1383:222:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1674:80:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1684:22:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1699:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1693:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1693:13:20"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1684:5:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1742:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1715:26:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1715:33:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1715:33:20"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1652:6:20",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1660:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1668:5:20",
                "type": ""
              }
            ],
            "src": "1611:143:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1837:274:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1883:83:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1885:77:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1885:79:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1885:79:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1858:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1867:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1854:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1854:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1879:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1850:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1850:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1847:119:20"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1976:128:20",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1991:15:20",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2005:1:20",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1995:6:20",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2020:74:20",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2066:9:20"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2077:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2062:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2062:22:20"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2086:7:20"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2030:31:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2030:64:20"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2020:6:20"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1807:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1818:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1830:6:20",
                "type": ""
              }
            ],
            "src": "1760:351:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2213:73:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2230:3:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2235:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2223:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2223:19:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2223:19:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2251:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2270:3:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2275:4:20",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2266:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2266:14:20"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2251:11:20"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2185:3:20",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2190:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2201:11:20",
                "type": ""
              }
            ],
            "src": "2117:169:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2398:114:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2420:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2428:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2416:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2416:14:20"
                      },
                      {
                        "hexValue": "4572726f723a20596f75722062616c616e6365206973206e6f7420656e6f7567",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2432:34:20",
                        "type": "",
                        "value": "Error: Your balance is not enoug"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2409:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2409:58:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2409:58:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2488:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2496:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2484:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2484:15:20"
                      },
                      {
                        "hexValue": "68",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2501:3:20",
                        "type": "",
                        "value": "h"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2477:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2477:28:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2477:28:20"
                }
              ]
            },
            "name": "store_literal_in_memory_e8eb9df7a92e4ee6fe8bd2bad9b6b807e30f3ca872a270f1a638d13a26ec3a58",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2390:6:20",
                "type": ""
              }
            ],
            "src": "2292:220:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2664:220:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2674:74:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2740:3:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2745:2:20",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2681:58:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2681:67:20"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2674:3:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2846:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_e8eb9df7a92e4ee6fe8bd2bad9b6b807e30f3ca872a270f1a638d13a26ec3a58",
                      "nodeType": "YulIdentifier",
                      "src": "2757:88:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2757:93:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2757:93:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2859:19:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2870:3:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2875:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2866:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2866:12:20"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2859:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e8eb9df7a92e4ee6fe8bd2bad9b6b807e30f3ca872a270f1a638d13a26ec3a58_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2652:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2660:3:20",
                "type": ""
              }
            ],
            "src": "2518:366:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3061:248:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3071:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3083:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3094:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3079:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3079:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3071:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3118:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3129:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3114:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3114:17:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3137:4:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3143:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3133:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3133:20:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3107:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3107:47:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3107:47:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3163:139:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3297:4:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e8eb9df7a92e4ee6fe8bd2bad9b6b807e30f3ca872a270f1a638d13a26ec3a58_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3171:124:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3171:131:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3163:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e8eb9df7a92e4ee6fe8bd2bad9b6b807e30f3ca872a270f1a638d13a26ec3a58__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3041:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3056:4:20",
                "type": ""
              }
            ],
            "src": "2890:419:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3441:206:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3451:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3463:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3474:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3459:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3459:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3451:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3531:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3544:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3555:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3540:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3540:17:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3487:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3487:71:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3487:71:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3612:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3625:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3636:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3621:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3621:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3568:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3568:72:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3568:72:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3405:9:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3417:6:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3425:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3436:4:20",
                "type": ""
              }
            ],
            "src": "3315:332:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3759:71:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3781:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3789:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3777:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3777:14:20"
                      },
                      {
                        "hexValue": "4572726f723a20416c6c6f77616e6365206e6f7420656e6f756768",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3793:29:20",
                        "type": "",
                        "value": "Error: Allowance not enough"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3770:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3770:53:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3770:53:20"
                }
              ]
            },
            "name": "store_literal_in_memory_f8fe01a003015e488ab01ce02dfce5bfe5a5903c8b9154cf4251c0755ed54302",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3751:6:20",
                "type": ""
              }
            ],
            "src": "3653:177:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3982:220:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3992:74:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4058:3:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4063:2:20",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3999:58:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3999:67:20"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3992:3:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4164:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_f8fe01a003015e488ab01ce02dfce5bfe5a5903c8b9154cf4251c0755ed54302",
                      "nodeType": "YulIdentifier",
                      "src": "4075:88:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4075:93:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4075:93:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4177:19:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4188:3:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4193:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4184:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4184:12:20"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4177:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f8fe01a003015e488ab01ce02dfce5bfe5a5903c8b9154cf4251c0755ed54302_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3970:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3978:3:20",
                "type": ""
              }
            ],
            "src": "3836:366:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4379:248:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4389:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4401:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4412:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4397:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4397:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4389:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4436:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4447:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4432:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4432:17:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4455:4:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4461:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4451:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4451:20:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4425:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4425:47:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4425:47:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4481:139:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4615:4:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f8fe01a003015e488ab01ce02dfce5bfe5a5903c8b9154cf4251c0755ed54302_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4489:124:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4489:131:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4481:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8fe01a003015e488ab01ce02dfce5bfe5a5903c8b9154cf4251c0755ed54302__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4359:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4374:4:20",
                "type": ""
              }
            ],
            "src": "4208:419:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4698:53:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4715:3:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4738:5:20"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4720:17:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4720:24:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4708:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4708:37:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4708:37:20"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4686:5:20",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4693:3:20",
                "type": ""
              }
            ],
            "src": "4633:118:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4883:206:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4893:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4905:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4916:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4901:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4901:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4893:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4973:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4986:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4997:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4982:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4982:17:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4929:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4929:71:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4929:71:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5054:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5067:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5078:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5063:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5063:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5010:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5010:72:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5010:72:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4847:9:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4859:6:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4867:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4878:4:20",
                "type": ""
              }
            ],
            "src": "4757:332:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5201:122:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5223:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5231:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5219:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5219:14:20"
                      },
                      {
                        "hexValue": "4572726f723a20436f6e7472616374205443472042616c616e6365206973206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5235:34:20",
                        "type": "",
                        "value": "Error: Contract TCG Balance is n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5212:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5212:58:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5212:58:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5291:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5299:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5287:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5287:15:20"
                      },
                      {
                        "hexValue": "6f7420656e6f756768",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5304:11:20",
                        "type": "",
                        "value": "ot enough"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5280:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5280:36:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5280:36:20"
                }
              ]
            },
            "name": "store_literal_in_memory_c91bd80eed6cce47784b0f869fe014a6a8f7c52f769468f4a325dcf106e760db",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5193:6:20",
                "type": ""
              }
            ],
            "src": "5095:228:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5475:220:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5485:74:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5551:3:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5556:2:20",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5492:58:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5492:67:20"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5485:3:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5657:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c91bd80eed6cce47784b0f869fe014a6a8f7c52f769468f4a325dcf106e760db",
                      "nodeType": "YulIdentifier",
                      "src": "5568:88:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5568:93:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5568:93:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5670:19:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5681:3:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5686:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5677:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5677:12:20"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5670:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c91bd80eed6cce47784b0f869fe014a6a8f7c52f769468f4a325dcf106e760db_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5463:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5471:3:20",
                "type": ""
              }
            ],
            "src": "5329:366:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5872:248:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5882:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5894:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5905:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5890:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5890:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5882:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5929:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5940:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5925:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5925:17:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5948:4:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5954:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5944:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5944:20:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5918:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5918:47:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5918:47:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5974:139:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6108:4:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c91bd80eed6cce47784b0f869fe014a6a8f7c52f769468f4a325dcf106e760db_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5982:124:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5982:131:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5974:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c91bd80eed6cce47784b0f869fe014a6a8f7c52f769468f4a325dcf106e760db__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5852:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5867:4:20",
                "type": ""
              }
            ],
            "src": "5701:419:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6168:48:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6178:32:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6203:5:20"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6196:6:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6196:13:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6189:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6189:21:20"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6178:7:20"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6150:5:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6160:7:20",
                "type": ""
              }
            ],
            "src": "6126:90:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6262:76:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6316:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6325:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6328:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6318:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6318:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6318:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6285:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6307:5:20"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "6292:14:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6292:21:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6282:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6282:32:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6275:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6275:40:20"
                  },
                  "nodeType": "YulIf",
                  "src": "6272:60:20"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6255:5:20",
                "type": ""
              }
            ],
            "src": "6222:116:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6404:77:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6414:22:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "6429:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6423:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6423:13:20"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "6414:5:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6469:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "6445:23:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6445:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6445:30:20"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "6382:6:20",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6390:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6398:5:20",
                "type": ""
              }
            ],
            "src": "6344:137:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6561:271:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6607:83:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "6609:77:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6609:79:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6609:79:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6582:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6591:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6578:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6578:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6603:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6574:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6574:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "6571:119:20"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6700:125:20",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6715:15:20",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6729:1:20",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6719:6:20",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6744:71:20",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6787:9:20"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6798:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6783:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6783:22:20"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6807:7:20"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "6754:28:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6754:61:20"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6744:6:20"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6531:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6542:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6554:6:20",
                "type": ""
              }
            ],
            "src": "6487:345:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6992:288:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7002:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7014:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7025:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7010:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7010:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7002:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7082:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7095:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7106:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7091:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7091:17:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7038:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7038:71:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7038:71:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7163:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7176:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7187:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7172:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7172:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7119:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7119:72:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7119:72:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7245:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7258:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7269:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7254:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7254:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7201:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7201:72:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7201:72:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6948:9:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6960:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6968:6:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6976:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6987:4:20",
                "type": ""
              }
            ],
            "src": "6838:442:20"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e8eb9df7a92e4ee6fe8bd2bad9b6b807e30f3ca872a270f1a638d13a26ec3a58(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error: Your balance is not enoug\")\n\n        mstore(add(memPtr, 32), \"h\")\n\n    }\n\n    function abi_encode_t_stringliteral_e8eb9df7a92e4ee6fe8bd2bad9b6b807e30f3ca872a270f1a638d13a26ec3a58_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_e8eb9df7a92e4ee6fe8bd2bad9b6b807e30f3ca872a270f1a638d13a26ec3a58(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e8eb9df7a92e4ee6fe8bd2bad9b6b807e30f3ca872a270f1a638d13a26ec3a58__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e8eb9df7a92e4ee6fe8bd2bad9b6b807e30f3ca872a270f1a638d13a26ec3a58_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_f8fe01a003015e488ab01ce02dfce5bfe5a5903c8b9154cf4251c0755ed54302(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error: Allowance not enough\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8fe01a003015e488ab01ce02dfce5bfe5a5903c8b9154cf4251c0755ed54302_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_f8fe01a003015e488ab01ce02dfce5bfe5a5903c8b9154cf4251c0755ed54302(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8fe01a003015e488ab01ce02dfce5bfe5a5903c8b9154cf4251c0755ed54302__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8fe01a003015e488ab01ce02dfce5bfe5a5903c8b9154cf4251c0755ed54302_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_c91bd80eed6cce47784b0f869fe014a6a8f7c52f769468f4a325dcf106e760db(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error: Contract TCG Balance is n\")\n\n        mstore(add(memPtr, 32), \"ot enough\")\n\n    }\n\n    function abi_encode_t_stringliteral_c91bd80eed6cce47784b0f869fe014a6a8f7c52f769468f4a325dcf106e760db_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_c91bd80eed6cce47784b0f869fe014a6a8f7c52f769468f4a325dcf106e760db(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c91bd80eed6cce47784b0f869fe014a6a8f7c52f769468f4a325dcf106e760db__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c91bd80eed6cce47784b0f869fe014a6a8f7c52f769468f4a325dcf106e760db_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
      "id": 20,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "270:1448:5:-:0;;;347:142;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;434:12;412:4;;:35;;;;;;;;;;;;;;;;;;470:11;457:3;;:25;;;;;;;;;;;;;;;;;;347:142;;270:1448;;88:117:20;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;270:1448:5:-;;;;;;;",
  "deployedSourceMap": "270:1448:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1126:590;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;550:500;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1126:590;1238:7;1208:4;;;;;;;;;;:14;;;1223:10;1208:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;1187:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;1380:7;1335:4;;;;;;;;;;:14;;;1350:10;1370:4;1335:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;1314:126;;;;;;;;;;;;:::i;:::-;;;;;;;;;1471:4;;;;;;;;;;:9;;;1481:10;1493:7;1471:30;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1592:7;1560:3;;;;;;;;;;;:13;;;1582:4;1560:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;;1539:127;;;;;;;;;;;;:::i;:::-;;;;;;;;;1676:3;;;;;;;;;;;:12;;;1689:10;1701:7;1676:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1126:590;:::o;550:500::-;659:7;630:3;;;;;;;;;;;:13;;;644:10;630:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:36;;609:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;800:7;756:3;;;;;;;;;;;:13;;;770:10;790:4;756:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:51;;735:125;;;;;;;;;;;;:::i;:::-;;;;;;;;;909:3;;;;;;;;;;;:16;;;926:10;946:4;953:7;909:52;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1013:4;;;;;;;;;;:9;;;1023:10;1035:7;1013:30;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;550:500;:::o;88:117:20:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:143::-;1668:5;1699:6;1693:13;1684:22;;1715:33;1742:5;1715:33;:::i;:::-;1611:143;;;;:::o;1760:351::-;1830:6;1879:2;1867:9;1858:7;1854:23;1850:32;1847:119;;;1885:79;;:::i;:::-;1847:119;2005:1;2030:64;2086:7;2077:6;2066:9;2062:22;2030:64;:::i;:::-;2020:74;;1976:128;1760:351;;;;:::o;2117:169::-;2201:11;2235:6;2230:3;2223:19;2275:4;2270:3;2266:14;2251:29;;2117:169;;;;:::o;2292:220::-;2432:34;2428:1;2420:6;2416:14;2409:58;2501:3;2496:2;2488:6;2484:15;2477:28;2292:220;:::o;2518:366::-;2660:3;2681:67;2745:2;2740:3;2681:67;:::i;:::-;2674:74;;2757:93;2846:3;2757:93;:::i;:::-;2875:2;2870:3;2866:12;2859:19;;2518:366;;;:::o;2890:419::-;3056:4;3094:2;3083:9;3079:18;3071:26;;3143:9;3137:4;3133:20;3129:1;3118:9;3114:17;3107:47;3171:131;3297:4;3171:131;:::i;:::-;3163:139;;2890:419;;;:::o;3315:332::-;3436:4;3474:2;3463:9;3459:18;3451:26;;3487:71;3555:1;3544:9;3540:17;3531:6;3487:71;:::i;:::-;3568:72;3636:2;3625:9;3621:18;3612:6;3568:72;:::i;:::-;3315:332;;;;;:::o;3653:177::-;3793:29;3789:1;3781:6;3777:14;3770:53;3653:177;:::o;3836:366::-;3978:3;3999:67;4063:2;4058:3;3999:67;:::i;:::-;3992:74;;4075:93;4164:3;4075:93;:::i;:::-;4193:2;4188:3;4184:12;4177:19;;3836:366;;;:::o;4208:419::-;4374:4;4412:2;4401:9;4397:18;4389:26;;4461:9;4455:4;4451:20;4447:1;4436:9;4432:17;4425:47;4489:131;4615:4;4489:131;:::i;:::-;4481:139;;4208:419;;;:::o;4633:118::-;4720:24;4738:5;4720:24;:::i;:::-;4715:3;4708:37;4633:118;;:::o;4757:332::-;4878:4;4916:2;4905:9;4901:18;4893:26;;4929:71;4997:1;4986:9;4982:17;4973:6;4929:71;:::i;:::-;5010:72;5078:2;5067:9;5063:18;5054:6;5010:72;:::i;:::-;4757:332;;;;;:::o;5095:228::-;5235:34;5231:1;5223:6;5219:14;5212:58;5304:11;5299:2;5291:6;5287:15;5280:36;5095:228;:::o;5329:366::-;5471:3;5492:67;5556:2;5551:3;5492:67;:::i;:::-;5485:74;;5568:93;5657:3;5568:93;:::i;:::-;5686:2;5681:3;5677:12;5670:19;;5329:366;;;:::o;5701:419::-;5867:4;5905:2;5894:9;5890:18;5882:26;;5954:9;5948:4;5944:20;5940:1;5929:9;5925:17;5918:47;5982:131;6108:4;5982:131;:::i;:::-;5974:139;;5701:419;;;:::o;6126:90::-;6160:7;6203:5;6196:13;6189:21;6178:32;;6126:90;;;:::o;6222:116::-;6292:21;6307:5;6292:21;:::i;:::-;6285:5;6282:32;6272:60;;6328:1;6325;6318:12;6272:60;6222:116;:::o;6344:137::-;6398:5;6429:6;6423:13;6414:22;;6445:30;6469:5;6445:30;:::i;:::-;6344:137;;;;:::o;6487:345::-;6554:6;6603:2;6591:9;6582:7;6578:23;6574:32;6571:119;;;6609:79;;:::i;:::-;6571:119;6729:1;6754:61;6807:7;6798:6;6787:9;6783:22;6754:61;:::i;:::-;6744:71;;6700:125;6487:345;;;;:::o;6838:442::-;6987:4;7025:2;7014:9;7010:18;7002:26;;7038:71;7106:1;7095:9;7091:17;7082:6;7038:71;:::i;:::-;7119:72;7187:2;7176:9;7172:18;7163:6;7119:72;:::i;:::-;7201;7269:2;7258:9;7254:18;7245:6;7201:72;:::i;:::-;6838:442;;;;;;:::o",
  "source": "pragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./interfaces/IERC20Mintable.sol\";\nimport \"./interfaces/IWrapper.sol\";\n\ncontract Wrapper is IWrapper {\n    IERC20Mintable WTCG;\n    IERC20 TCG;\n\n    constructor(address _tcgAddress, address _wtcgAddress) {\n        WTCG = IERC20Mintable(_wtcgAddress);\n        TCG = IERC20(_tcgAddress);\n    }\n\n    // WTCG is minted one to one for every TCG wrapped\n    function wrap(uint256 _amount) external override {\n        require(\n            TCG.balanceOf(msg.sender) >= _amount,\n            \"Error: Your balance is not enough\"\n        );\n        require(\n            TCG.allowance(msg.sender, address(this)) >= _amount,\n            \"Error: Allowance not enough\"\n        );\n\n        // transfer TCG into contract\n        TCG.transferFrom(msg.sender, address(this), _amount);\n        // mint Wrapped TCG to msg.sender\n        WTCG.mint(msg.sender, _amount);\n    }\n\n    // WTCG is burned and TCG is sent to msg.sender, one to one ratio\n    function unwrap(uint256 _amount) external override {\n        require(\n            WTCG.balanceOf(msg.sender) >= _amount,\n            \"Error: Your balance is not enough\"\n        );\n        require(\n            WTCG.allowance(msg.sender, address(this)) >= _amount,\n            \"Error: Allowance not enough\"\n        );\n        // burn WTCG\n        WTCG.burn(msg.sender, _amount);\n        // burn Wrapped WTC\n        require(\n            TCG.balanceOf(address(this)) >= _amount,\n            \"Error: Contract TCG Balance is not enough\"\n        );\n        TCG.transfer(msg.sender, _amount);\n    }\n}\n",
  "sourcePath": "/Users/onyejivictor/Documents/code/2022/the-creators-galaxy/contracts/Wrapper.sol",
  "ast": {
    "absolutePath": "project:/contracts/Wrapper.sol",
    "exportedSymbols": {
      "Context": [
        817
      ],
      "ERC20": [
        692
      ],
      "IERC20": [
        770
      ],
      "IERC20Metadata": [
        795
      ],
      "IERC20Mintable": [
        997
      ],
      "IWrapper": [
        1010
      ],
      "Ownable": [
        104
      ],
      "Wrapper": [
        968
      ]
    },
    "id": 969,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 819,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 820,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 969,
        "sourceUnit": 693,
        "src": "25:55:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 821,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 969,
        "sourceUnit": 771,
        "src": "81:56:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 822,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 969,
        "sourceUnit": 105,
        "src": "138:52:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IERC20Mintable.sol",
        "file": "./interfaces/IERC20Mintable.sol",
        "id": 823,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 969,
        "sourceUnit": 998,
        "src": "191:41:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IWrapper.sol",
        "file": "./interfaces/IWrapper.sol",
        "id": 824,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 969,
        "sourceUnit": 1011,
        "src": "233:35:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 825,
              "name": "IWrapper",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1010,
              "src": "290:8:5"
            },
            "id": 826,
            "nodeType": "InheritanceSpecifier",
            "src": "290:8:5"
          }
        ],
        "canonicalName": "Wrapper",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 968,
        "linearizedBaseContracts": [
          968,
          1010
        ],
        "name": "Wrapper",
        "nameLocation": "279:7:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 829,
            "mutability": "mutable",
            "name": "WTCG",
            "nameLocation": "320:4:5",
            "nodeType": "VariableDeclaration",
            "scope": 968,
            "src": "305:19:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20Mintable_$997",
              "typeString": "contract IERC20Mintable"
            },
            "typeName": {
              "id": 828,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 827,
                "name": "IERC20Mintable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 997,
                "src": "305:14:5"
              },
              "referencedDeclaration": 997,
              "src": "305:14:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Mintable_$997",
                "typeString": "contract IERC20Mintable"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 832,
            "mutability": "mutable",
            "name": "TCG",
            "nameLocation": "337:3:5",
            "nodeType": "VariableDeclaration",
            "scope": 968,
            "src": "330:10:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$770",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 831,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 830,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 770,
                "src": "330:6:5"
              },
              "referencedDeclaration": 770,
              "src": "330:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$770",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 851,
              "nodeType": "Block",
              "src": "402:87:5",
              "statements": [
                {
                  "expression": {
                    "id": 843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 839,
                      "name": "WTCG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 829,
                      "src": "412:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Mintable_$997",
                        "typeString": "contract IERC20Mintable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 841,
                          "name": "_wtcgAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 836,
                          "src": "434:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 840,
                        "name": "IERC20Mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 997,
                        "src": "419:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20Mintable_$997_$",
                          "typeString": "type(contract IERC20Mintable)"
                        }
                      },
                      "id": 842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "419:28:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Mintable_$997",
                        "typeString": "contract IERC20Mintable"
                      }
                    },
                    "src": "412:35:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Mintable_$997",
                      "typeString": "contract IERC20Mintable"
                    }
                  },
                  "id": 844,
                  "nodeType": "ExpressionStatement",
                  "src": "412:35:5"
                },
                {
                  "expression": {
                    "id": 849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 845,
                      "name": "TCG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 832,
                      "src": "457:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$770",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 847,
                          "name": "_tcgAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 834,
                          "src": "470:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 846,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 770,
                        "src": "463:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$770_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "463:19:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$770",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "457:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$770",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 850,
                  "nodeType": "ExpressionStatement",
                  "src": "457:25:5"
                }
              ]
            },
            "id": 852,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 834,
                  "mutability": "mutable",
                  "name": "_tcgAddress",
                  "nameLocation": "367:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "359:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "359:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 836,
                  "mutability": "mutable",
                  "name": "_wtcgAddress",
                  "nameLocation": "388:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "380:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "380:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "358:43:5"
            },
            "returnParameters": {
              "id": 838,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "402:0:5"
            },
            "scope": 968,
            "src": "347:142:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1004
            ],
            "body": {
              "id": 904,
              "nodeType": "Block",
              "src": "599:451:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 861,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "644:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 862,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "644:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 859,
                              "name": "TCG",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 832,
                              "src": "630:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$770",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 860,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 709,
                            "src": "630:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "630:25:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 864,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 854,
                          "src": "659:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "630:36:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f723a20596f75722062616c616e6365206973206e6f7420656e6f756768",
                        "id": 866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "680:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e8eb9df7a92e4ee6fe8bd2bad9b6b807e30f3ca872a270f1a638d13a26ec3a58",
                          "typeString": "literal_string \"Error: Your balance is not enough\""
                        },
                        "value": "Error: Your balance is not enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e8eb9df7a92e4ee6fe8bd2bad9b6b807e30f3ca872a270f1a638d13a26ec3a58",
                          "typeString": "literal_string \"Error: Your balance is not enough\""
                        }
                      ],
                      "id": 858,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "609:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "609:116:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 868,
                  "nodeType": "ExpressionStatement",
                  "src": "609:116:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 872,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "770:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 873,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "770:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 876,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "790:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Wrapper_$968",
                                    "typeString": "contract Wrapper"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Wrapper_$968",
                                    "typeString": "contract Wrapper"
                                  }
                                ],
                                "id": 875,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "782:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 874,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "782:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 877,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "782:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 870,
                              "name": "TCG",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 832,
                              "src": "756:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$770",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 729,
                            "src": "756:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "756:40:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 879,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 854,
                          "src": "800:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "756:51:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f723a20416c6c6f77616e6365206e6f7420656e6f756768",
                        "id": 881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "821:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8fe01a003015e488ab01ce02dfce5bfe5a5903c8b9154cf4251c0755ed54302",
                          "typeString": "literal_string \"Error: Allowance not enough\""
                        },
                        "value": "Error: Allowance not enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8fe01a003015e488ab01ce02dfce5bfe5a5903c8b9154cf4251c0755ed54302",
                          "typeString": "literal_string \"Error: Allowance not enough\""
                        }
                      ],
                      "id": 869,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "735:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "735:125:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 883,
                  "nodeType": "ExpressionStatement",
                  "src": "735:125:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 887,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "926:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "926:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 891,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "946:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Wrapper_$968",
                              "typeString": "contract Wrapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Wrapper_$968",
                              "typeString": "contract Wrapper"
                            }
                          ],
                          "id": 890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "938:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 889,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "938:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "938:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 893,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 854,
                        "src": "953:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 884,
                        "name": "TCG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 832,
                        "src": "909:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$770",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 751,
                      "src": "909:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "909:52:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 895,
                  "nodeType": "ExpressionStatement",
                  "src": "909:52:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 899,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1023:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1023:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 901,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 854,
                        "src": "1035:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 896,
                        "name": "WTCG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 829,
                        "src": "1013:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Mintable_$997",
                          "typeString": "contract IERC20Mintable"
                        }
                      },
                      "id": 898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 989,
                      "src": "1013:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1013:30:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 903,
                  "nodeType": "ExpressionStatement",
                  "src": "1013:30:5"
                }
              ]
            },
            "functionSelector": "ea598cb0",
            "id": 905,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "wrap",
            "nameLocation": "559:4:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 856,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "590:8:5"
            },
            "parameters": {
              "id": 855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 854,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "572:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "564:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 853,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "564:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "563:17:5"
            },
            "returnParameters": {
              "id": 857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "599:0:5"
            },
            "scope": 968,
            "src": "550:500:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1009
            ],
            "body": {
              "id": 966,
              "nodeType": "Block",
              "src": "1177:539:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 914,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1223:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 915,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1223:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 912,
                              "name": "WTCG",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 829,
                              "src": "1208:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Mintable_$997",
                                "typeString": "contract IERC20Mintable"
                              }
                            },
                            "id": 913,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 709,
                            "src": "1208:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1208:26:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 917,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 907,
                          "src": "1238:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1208:37:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f723a20596f75722062616c616e6365206973206e6f7420656e6f756768",
                        "id": 919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1259:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e8eb9df7a92e4ee6fe8bd2bad9b6b807e30f3ca872a270f1a638d13a26ec3a58",
                          "typeString": "literal_string \"Error: Your balance is not enough\""
                        },
                        "value": "Error: Your balance is not enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e8eb9df7a92e4ee6fe8bd2bad9b6b807e30f3ca872a270f1a638d13a26ec3a58",
                          "typeString": "literal_string \"Error: Your balance is not enough\""
                        }
                      ],
                      "id": 911,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1187:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1187:117:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 921,
                  "nodeType": "ExpressionStatement",
                  "src": "1187:117:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 925,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1350:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1350:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 929,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1370:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Wrapper_$968",
                                    "typeString": "contract Wrapper"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Wrapper_$968",
                                    "typeString": "contract Wrapper"
                                  }
                                ],
                                "id": 928,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1362:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 927,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1362:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 930,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1362:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 923,
                              "name": "WTCG",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 829,
                              "src": "1335:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Mintable_$997",
                                "typeString": "contract IERC20Mintable"
                              }
                            },
                            "id": 924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 729,
                            "src": "1335:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1335:41:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 932,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 907,
                          "src": "1380:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1335:52:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f723a20416c6c6f77616e6365206e6f7420656e6f756768",
                        "id": 934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1401:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8fe01a003015e488ab01ce02dfce5bfe5a5903c8b9154cf4251c0755ed54302",
                          "typeString": "literal_string \"Error: Allowance not enough\""
                        },
                        "value": "Error: Allowance not enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8fe01a003015e488ab01ce02dfce5bfe5a5903c8b9154cf4251c0755ed54302",
                          "typeString": "literal_string \"Error: Allowance not enough\""
                        }
                      ],
                      "id": 922,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1314:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1314:126:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 936,
                  "nodeType": "ExpressionStatement",
                  "src": "1314:126:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 940,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1481:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1481:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 942,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 907,
                        "src": "1493:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 937,
                        "name": "WTCG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 829,
                        "src": "1471:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Mintable_$997",
                          "typeString": "contract IERC20Mintable"
                        }
                      },
                      "id": 939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 996,
                      "src": "1471:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1471:30:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 944,
                  "nodeType": "ExpressionStatement",
                  "src": "1471:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 950,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1582:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Wrapper_$968",
                                    "typeString": "contract Wrapper"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Wrapper_$968",
                                    "typeString": "contract Wrapper"
                                  }
                                ],
                                "id": 949,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1574:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 948,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1574:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 951,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1574:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 946,
                              "name": "TCG",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 832,
                              "src": "1560:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$770",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 947,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 709,
                            "src": "1560:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1560:28:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 953,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 907,
                          "src": "1592:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1560:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f723a20436f6e7472616374205443472042616c616e6365206973206e6f7420656e6f756768",
                        "id": 955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1613:43:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c91bd80eed6cce47784b0f869fe014a6a8f7c52f769468f4a325dcf106e760db",
                          "typeString": "literal_string \"Error: Contract TCG Balance is not enough\""
                        },
                        "value": "Error: Contract TCG Balance is not enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c91bd80eed6cce47784b0f869fe014a6a8f7c52f769468f4a325dcf106e760db",
                          "typeString": "literal_string \"Error: Contract TCG Balance is not enough\""
                        }
                      ],
                      "id": 945,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1539:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1539:127:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 957,
                  "nodeType": "ExpressionStatement",
                  "src": "1539:127:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 961,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1689:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1689:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 963,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 907,
                        "src": "1701:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 958,
                        "name": "TCG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 832,
                        "src": "1676:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$770",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 719,
                      "src": "1676:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1676:33:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 965,
                  "nodeType": "ExpressionStatement",
                  "src": "1676:33:5"
                }
              ]
            },
            "functionSelector": "de0e9a3e",
            "id": 967,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unwrap",
            "nameLocation": "1135:6:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 909,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1168:8:5"
            },
            "parameters": {
              "id": 908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 907,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1150:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 967,
                  "src": "1142:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 906,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1142:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1141:17:5"
            },
            "returnParameters": {
              "id": 910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1177:0:5"
            },
            "scope": 968,
            "src": "1126:590:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 969,
        "src": "270:1448:5",
        "usedErrors": []
      }
    ],
    "src": "0:1719:5"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Wrapper.sol",
    "exportedSymbols": {
      "Context": [
        817
      ],
      "ERC20": [
        692
      ],
      "IERC20": [
        770
      ],
      "IERC20Metadata": [
        795
      ],
      "IERC20Mintable": [
        997
      ],
      "IWrapper": [
        1010
      ],
      "Ownable": [
        104
      ],
      "Wrapper": [
        968
      ]
    },
    "id": 969,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 819,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 820,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 969,
        "sourceUnit": 693,
        "src": "25:55:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 821,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 969,
        "sourceUnit": 771,
        "src": "81:56:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 822,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 969,
        "sourceUnit": 105,
        "src": "138:52:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IERC20Mintable.sol",
        "file": "./interfaces/IERC20Mintable.sol",
        "id": 823,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 969,
        "sourceUnit": 998,
        "src": "191:41:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IWrapper.sol",
        "file": "./interfaces/IWrapper.sol",
        "id": 824,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 969,
        "sourceUnit": 1011,
        "src": "233:35:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 825,
              "name": "IWrapper",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1010,
              "src": "290:8:5"
            },
            "id": 826,
            "nodeType": "InheritanceSpecifier",
            "src": "290:8:5"
          }
        ],
        "canonicalName": "Wrapper",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 968,
        "linearizedBaseContracts": [
          968,
          1010
        ],
        "name": "Wrapper",
        "nameLocation": "279:7:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 829,
            "mutability": "mutable",
            "name": "WTCG",
            "nameLocation": "320:4:5",
            "nodeType": "VariableDeclaration",
            "scope": 968,
            "src": "305:19:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20Mintable_$997",
              "typeString": "contract IERC20Mintable"
            },
            "typeName": {
              "id": 828,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 827,
                "name": "IERC20Mintable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 997,
                "src": "305:14:5"
              },
              "referencedDeclaration": 997,
              "src": "305:14:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Mintable_$997",
                "typeString": "contract IERC20Mintable"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 832,
            "mutability": "mutable",
            "name": "TCG",
            "nameLocation": "337:3:5",
            "nodeType": "VariableDeclaration",
            "scope": 968,
            "src": "330:10:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$770",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 831,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 830,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 770,
                "src": "330:6:5"
              },
              "referencedDeclaration": 770,
              "src": "330:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$770",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 851,
              "nodeType": "Block",
              "src": "402:87:5",
              "statements": [
                {
                  "expression": {
                    "id": 843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 839,
                      "name": "WTCG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 829,
                      "src": "412:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Mintable_$997",
                        "typeString": "contract IERC20Mintable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 841,
                          "name": "_wtcgAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 836,
                          "src": "434:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 840,
                        "name": "IERC20Mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 997,
                        "src": "419:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20Mintable_$997_$",
                          "typeString": "type(contract IERC20Mintable)"
                        }
                      },
                      "id": 842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "419:28:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Mintable_$997",
                        "typeString": "contract IERC20Mintable"
                      }
                    },
                    "src": "412:35:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Mintable_$997",
                      "typeString": "contract IERC20Mintable"
                    }
                  },
                  "id": 844,
                  "nodeType": "ExpressionStatement",
                  "src": "412:35:5"
                },
                {
                  "expression": {
                    "id": 849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 845,
                      "name": "TCG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 832,
                      "src": "457:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$770",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 847,
                          "name": "_tcgAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 834,
                          "src": "470:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 846,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 770,
                        "src": "463:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$770_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "463:19:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$770",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "457:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$770",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 850,
                  "nodeType": "ExpressionStatement",
                  "src": "457:25:5"
                }
              ]
            },
            "id": 852,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 834,
                  "mutability": "mutable",
                  "name": "_tcgAddress",
                  "nameLocation": "367:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "359:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "359:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 836,
                  "mutability": "mutable",
                  "name": "_wtcgAddress",
                  "nameLocation": "388:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "380:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "380:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "358:43:5"
            },
            "returnParameters": {
              "id": 838,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "402:0:5"
            },
            "scope": 968,
            "src": "347:142:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1004
            ],
            "body": {
              "id": 904,
              "nodeType": "Block",
              "src": "599:451:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 861,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "644:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 862,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "644:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 859,
                              "name": "TCG",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 832,
                              "src": "630:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$770",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 860,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 709,
                            "src": "630:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "630:25:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 864,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 854,
                          "src": "659:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "630:36:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f723a20596f75722062616c616e6365206973206e6f7420656e6f756768",
                        "id": 866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "680:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e8eb9df7a92e4ee6fe8bd2bad9b6b807e30f3ca872a270f1a638d13a26ec3a58",
                          "typeString": "literal_string \"Error: Your balance is not enough\""
                        },
                        "value": "Error: Your balance is not enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e8eb9df7a92e4ee6fe8bd2bad9b6b807e30f3ca872a270f1a638d13a26ec3a58",
                          "typeString": "literal_string \"Error: Your balance is not enough\""
                        }
                      ],
                      "id": 858,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "609:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "609:116:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 868,
                  "nodeType": "ExpressionStatement",
                  "src": "609:116:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 872,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "770:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 873,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "770:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 876,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "790:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Wrapper_$968",
                                    "typeString": "contract Wrapper"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Wrapper_$968",
                                    "typeString": "contract Wrapper"
                                  }
                                ],
                                "id": 875,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "782:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 874,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "782:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 877,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "782:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 870,
                              "name": "TCG",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 832,
                              "src": "756:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$770",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 729,
                            "src": "756:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "756:40:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 879,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 854,
                          "src": "800:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "756:51:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f723a20416c6c6f77616e6365206e6f7420656e6f756768",
                        "id": 881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "821:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8fe01a003015e488ab01ce02dfce5bfe5a5903c8b9154cf4251c0755ed54302",
                          "typeString": "literal_string \"Error: Allowance not enough\""
                        },
                        "value": "Error: Allowance not enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8fe01a003015e488ab01ce02dfce5bfe5a5903c8b9154cf4251c0755ed54302",
                          "typeString": "literal_string \"Error: Allowance not enough\""
                        }
                      ],
                      "id": 869,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "735:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "735:125:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 883,
                  "nodeType": "ExpressionStatement",
                  "src": "735:125:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 887,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "926:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "926:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 891,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "946:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Wrapper_$968",
                              "typeString": "contract Wrapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Wrapper_$968",
                              "typeString": "contract Wrapper"
                            }
                          ],
                          "id": 890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "938:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 889,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "938:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "938:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 893,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 854,
                        "src": "953:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 884,
                        "name": "TCG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 832,
                        "src": "909:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$770",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 751,
                      "src": "909:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "909:52:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 895,
                  "nodeType": "ExpressionStatement",
                  "src": "909:52:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 899,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1023:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1023:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 901,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 854,
                        "src": "1035:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 896,
                        "name": "WTCG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 829,
                        "src": "1013:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Mintable_$997",
                          "typeString": "contract IERC20Mintable"
                        }
                      },
                      "id": 898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 989,
                      "src": "1013:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1013:30:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 903,
                  "nodeType": "ExpressionStatement",
                  "src": "1013:30:5"
                }
              ]
            },
            "functionSelector": "ea598cb0",
            "id": 905,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "wrap",
            "nameLocation": "559:4:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 856,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "590:8:5"
            },
            "parameters": {
              "id": 855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 854,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "572:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "564:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 853,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "564:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "563:17:5"
            },
            "returnParameters": {
              "id": 857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "599:0:5"
            },
            "scope": 968,
            "src": "550:500:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1009
            ],
            "body": {
              "id": 966,
              "nodeType": "Block",
              "src": "1177:539:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 914,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1223:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 915,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1223:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 912,
                              "name": "WTCG",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 829,
                              "src": "1208:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Mintable_$997",
                                "typeString": "contract IERC20Mintable"
                              }
                            },
                            "id": 913,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 709,
                            "src": "1208:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1208:26:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 917,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 907,
                          "src": "1238:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1208:37:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f723a20596f75722062616c616e6365206973206e6f7420656e6f756768",
                        "id": 919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1259:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e8eb9df7a92e4ee6fe8bd2bad9b6b807e30f3ca872a270f1a638d13a26ec3a58",
                          "typeString": "literal_string \"Error: Your balance is not enough\""
                        },
                        "value": "Error: Your balance is not enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e8eb9df7a92e4ee6fe8bd2bad9b6b807e30f3ca872a270f1a638d13a26ec3a58",
                          "typeString": "literal_string \"Error: Your balance is not enough\""
                        }
                      ],
                      "id": 911,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1187:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1187:117:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 921,
                  "nodeType": "ExpressionStatement",
                  "src": "1187:117:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 925,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1350:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1350:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 929,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1370:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Wrapper_$968",
                                    "typeString": "contract Wrapper"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Wrapper_$968",
                                    "typeString": "contract Wrapper"
                                  }
                                ],
                                "id": 928,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1362:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 927,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1362:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 930,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1362:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 923,
                              "name": "WTCG",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 829,
                              "src": "1335:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Mintable_$997",
                                "typeString": "contract IERC20Mintable"
                              }
                            },
                            "id": 924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 729,
                            "src": "1335:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1335:41:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 932,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 907,
                          "src": "1380:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1335:52:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f723a20416c6c6f77616e6365206e6f7420656e6f756768",
                        "id": 934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1401:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8fe01a003015e488ab01ce02dfce5bfe5a5903c8b9154cf4251c0755ed54302",
                          "typeString": "literal_string \"Error: Allowance not enough\""
                        },
                        "value": "Error: Allowance not enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8fe01a003015e488ab01ce02dfce5bfe5a5903c8b9154cf4251c0755ed54302",
                          "typeString": "literal_string \"Error: Allowance not enough\""
                        }
                      ],
                      "id": 922,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1314:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1314:126:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 936,
                  "nodeType": "ExpressionStatement",
                  "src": "1314:126:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 940,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1481:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1481:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 942,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 907,
                        "src": "1493:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 937,
                        "name": "WTCG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 829,
                        "src": "1471:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Mintable_$997",
                          "typeString": "contract IERC20Mintable"
                        }
                      },
                      "id": 939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 996,
                      "src": "1471:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1471:30:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 944,
                  "nodeType": "ExpressionStatement",
                  "src": "1471:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 950,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1582:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Wrapper_$968",
                                    "typeString": "contract Wrapper"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Wrapper_$968",
                                    "typeString": "contract Wrapper"
                                  }
                                ],
                                "id": 949,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1574:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 948,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1574:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 951,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1574:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 946,
                              "name": "TCG",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 832,
                              "src": "1560:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$770",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 947,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 709,
                            "src": "1560:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1560:28:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 953,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 907,
                          "src": "1592:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1560:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f723a20436f6e7472616374205443472042616c616e6365206973206e6f7420656e6f756768",
                        "id": 955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1613:43:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c91bd80eed6cce47784b0f869fe014a6a8f7c52f769468f4a325dcf106e760db",
                          "typeString": "literal_string \"Error: Contract TCG Balance is not enough\""
                        },
                        "value": "Error: Contract TCG Balance is not enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c91bd80eed6cce47784b0f869fe014a6a8f7c52f769468f4a325dcf106e760db",
                          "typeString": "literal_string \"Error: Contract TCG Balance is not enough\""
                        }
                      ],
                      "id": 945,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1539:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1539:127:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 957,
                  "nodeType": "ExpressionStatement",
                  "src": "1539:127:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 961,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1689:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1689:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 963,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 907,
                        "src": "1701:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 958,
                        "name": "TCG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 832,
                        "src": "1676:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$770",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 719,
                      "src": "1676:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1676:33:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 965,
                  "nodeType": "ExpressionStatement",
                  "src": "1676:33:5"
                }
              ]
            },
            "functionSelector": "de0e9a3e",
            "id": 967,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unwrap",
            "nameLocation": "1135:6:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 909,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1168:8:5"
            },
            "parameters": {
              "id": 908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 907,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1150:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 967,
                  "src": "1142:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 906,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1142:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1141:17:5"
            },
            "returnParameters": {
              "id": 910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1177:0:5"
            },
            "scope": 968,
            "src": "1126:590:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 969,
        "src": "270:1448:5",
        "usedErrors": []
      }
    ],
    "src": "0:1719:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2022-03-27T22:21:56.546Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}